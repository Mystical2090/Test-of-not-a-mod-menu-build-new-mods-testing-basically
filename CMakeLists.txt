cmake_minimum_required(VERSION 3.21)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
if ("${CMAKE_SYSTEM_NAME}" STREQUAL "iOS" OR IOS)
    set(CMAKE_OSX_ARCHITECTURES "arm64")
else()
    set(CMAKE_OSX_ARCHITECTURES "arm64;x86_64")
endif()
set(CMAKE_CXX_VISIBILITY_PRESET hidden)

project(polo VERSION 1.0.0)

add_library(${PROJECT_NAME} SHARED
    src/main.cpp
    src/Button.cpp
    src/hacks/Player/Noclip.cpp
    src/hacks/Player/jumphack.cpp
    src/hacks/Player/ignore-inputs.cpp
    src/hacks/misc/speedhack.cpp
    src/hacks/misc/iconhack.cpp
    src/hacks/misc/suicide.cpp
    src/hacks/creator/verifyhack.cpp
    src/hacks/creator/copy-hack.cpp
    src/hacks/creator/custom-obj-hack.cpp
    src/hacks/misc/practice-music.cpp
    src/hacks/misc/layout-mode.cpp
    src/hacks/misc/colorhack.cpp
    src/hacks/misc/show-hitboxes-on-death.cpp
    src/hacks/misc/bot.cpp
    # src/hacks/misc/startpos.cpp
     # src/hacks/misc/safe-mode.cpp
    
)

if (NOT DEFINED ENV{GEODE_SDK})
    message(FATAL_ERROR "Unable to find Geode SDK! Please define GEODE_SDK environment variable to point to Geode")
else()
    message(STATUS "Found Geode: $ENV{GEODE_SDK}")
endif()

add_subdirectory($ENV{GEODE_SDK} ${CMAKE_CURRENT_BINARY_DIR}/geode)

setup_geode_mod(${PROJECT_NAME})
